kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: set-app-dc-template
  annotations:
    description: Template for deploying the set-app application
    tags: set-app
    openshift.io/display-name: set-app

objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    annotations:
      app.openshift.io/route-disabled: 'false'
      openshift.io/generated-by: OpenShiftWebConsole
    name: set-app
    namespace: ec1236-dev
    labels:
      app: set-app
      app.kubernetes.io/component: set-app
      app.kubernetes.io/instance: set-app
      app.kubernetes.io/name: set-app
      app.openshift.io/runtime: nodejs
      app.openshift.io/runtime-namespace: ec1236-tools
      app.openshift.io/runtime-version: latest
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - set-app
          from:
            kind: ImageStreamTag
            namespace: ec1236-tools
            name: 'set-app:latest'
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: set-app
      deploymentconfig: set-app
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: set-app
          deploymentconfig: set-app
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        containers:
          - name: set-app
            image: >-
              image-registry.openshift-image-registry.svc:5000/ec1236-tools/set-app
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: IfNotPresent
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
