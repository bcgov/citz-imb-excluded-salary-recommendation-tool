version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: .docker/Dockerfile.dev
    ports:
      - '8080:8080'
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    networks:
      - app-network
    tty: true

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: .docker/Dockerfile.dev
    env_file: .env
    environment:
      - PORT=${API_PORT:-3000}
    ports:
      - '3000:3000'
    volumes:
      - ./api:/app
      - ./prisma:/usr/src/app/prisma
    depends_on:
      - db
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:12.2-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - db:/data/db
    ports:
      - '${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1"]
      interval: 5s
      timeout: 3s
    networks:
      - app-network

networks:
  app-network:
    driver: "bridge"

volumes:
  db:
