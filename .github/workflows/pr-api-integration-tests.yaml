name: Pull Request â€” API Integration Tests

on:
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
      - "api/**"
      - ".github/workflows/pr-api-integration-tests.yaml"

jobs:
  containerized-tests:
    name: Containerized Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      # Setup Environment Variables
      - name: Setup Environment Variables
        run: |
          touch .env
          echo "VITE_TARGET=dev" >> .env
          echo "ENVIRONMENT=local" >> .env
          echo "FRONTEND_PORT=8080" >> .env
          echo "FRONTEND_URL=http://localhost:8080" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "POSTGRES_DB=salary-app-db" >> .env
          echo "POSTGRES_USER=db-admin" >> .env
          echo "API_PORT=3000" >> .env

      - name: Spin Up API and POSTGRES Images
        run: |
          docker-compose -f docker-compose.dev.yaml build db api frontend
          docker-compose -f docker-compose.dev.yaml up -d db api frontend
      
      - name: Wait for POSTGRES Healthcheck
        uses: stringbean/docker-healthcheck-action@v1
        with:
          container: db
          wait-time: 60
          require-status: running
          require-healthy: true
        
      # - name: Wait for API Healthcheck
      #   uses: stringbean/docker-healthcheck-action@v1
      #   id: api-healthcheck
      #   continue-on-error: true
      #   with:
      #     container: api
      #     wait-time: 90
      #     require-status: running
      #     require-healthy: true
      
      # - name: Print Docker API Logs
      #   run: |
      #     docker logs api

      # - name: Stop if API Failed
      #   if: steps.api-healthcheck.outcome == 'failure'
      #   run: |
      #     exit 1
        
      - name: Install Integration Testing Dependencies
        working-directory: ./api
        run: |
          npm i jest supertest ts-jest dotenv @types/jest
      
      - name: Run API Integration Tests
        working-directory: ./api
        run: |
          npm run test
