name: Build and Deploy Frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build-tag-push-scan:
    name: Build, Tag, and Push to OpenShift Image Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}

      # Login to BC Gov Docker Image Repository
      - name: Login to Openshift Docker
        run : |
          docker login ${{ secrets.PUBLIC_IMAGE_REPOSITORY }} -u ${{ secrets.OPENSHIFT_SA_NAME }} -p ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}

      # Make .env to prevent error in build
      - name: Make Environment File
        run: |
          touch .env

      - name: Build Frontend Image
        run: |
          docker-compose -f docker-compose.prod.yaml build frontend

      - name: List Docker Images
        run: |
          docker image ls

      - name: Tag Frontend Image
        run: |
          docker tag citz-imb-salary-estimate-tool_frontend ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/set-app:latest

      - name: List Docker Images
        run: |
          docker image ls

      - name: Push Frontend Image
        run: |
          docker push ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/set-app:latest

      - name: Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          image: ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/set-app:latest
          dockerhub-user: ${{ secrets.DOCKER_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKER_PASSWORD }}
          summary: true

  deploy:
    name: Deploy to OpenShift
    runs-on: ubuntu-latest
    needs: [ build-tag-push-scan ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

      - name: Deploy from DeploymentConfig
        env:
          OPENSHIFT_NAMESPACE: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
          APPLICATION_NAME: "set-app"
          DEPLOYMENT_CONFIG: "set-app-dc-template.yaml"
          IMAGE_REPOSITORY: ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}
        run: |
          ./.github/helpers/deploy.sh

  healthcheck:
    name: Check Deployment Health
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_PROJECT: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

      - name: Check Deployment Status
        run: |
          oc rollout status -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} dc/set-app --watch

  cleanup:
    name: Clean Up
    runs-on: ubuntu-latest
    needs: [ healthcheck ]
    steps:
      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: github-actions
          OPENSHIFT_PROJECT: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_DEV_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}

      - name: Remove previous objects
        run: |
          oc delete pod -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} --field-selector status.phase=Succeeded

      - name: Remove previous replication controllers
        run: |
          oc delete rc -n ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} --field-selector status.replicas=0
