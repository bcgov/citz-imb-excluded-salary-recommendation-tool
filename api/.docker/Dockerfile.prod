##################
### BASE IMAGE ###
##################
FROM node:18.15.0-alpine AS base

# Directory used in container
WORKDIR /app

# Copy everything
COPY . .

# Install TypeScript. Needed for build process.
RUN npm i -D typescript@5.0.4

# Compile to JavaScript build
RUN npm run build


##################
### PROD IMAGE ###
##################
FROM node:18.15.0-alpine as prod
ENV NODE_ENV=production

# Add curl for health check
RUN apk --update --no-cache add curl

# Directory used in container
WORKDIR /app

# Install packages. Needed even for compiled build.
COPY package.json .
RUN npm i

# Copy compiled build from base
COPY --from=base /app/dist .

RUN npx prisma generate

#For debugging: create and write the contents of start.sh in the container
RUN rm startProd.sh
RUN echo "#!/bin/bash" >> startProd.sh && \
    echo "# push the schema to the database and sync the client" >> startProd.sh && \
    echo "npx prisma db push --schema='/usr/src/app/prisma/schema.prisma' --skip-generate " >> startProd.sh && \
    echo "" >> startProd.sh && \
    echo "# Start the application" >> startProd.sh && \
    echo "npm run start:prod" >> startProd.sh

# Set execute permissions for the start.sh script.
RUN chmod +x ./startProd.sh

CMD ["./startProd.sh"]
